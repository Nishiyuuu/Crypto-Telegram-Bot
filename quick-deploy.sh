#!/bin/bash
# üöÄ –®–í–ò–î–ö–ò–ô –î–ï–ü–õ–û–ô –ù–ê –°–ï–†–í–ï–†

set -e

echo "üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è Crypto Telegram Bot..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
if [ -z "$BOT_TOKEN" ]; then
    echo "‚ùå –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ BOT_TOKEN"
    echo "–í–∏–∫–æ–Ω–∞–π—Ç–µ: export BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞'"
    exit 1
fi

if [ -z "$MONGO_URI" ]; then
    echo "‚ùå –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ MONGO_URI"
    echo "–í–∏–∫–æ–Ω–∞–π—Ç–µ: export MONGO_URI='mongodb+srv://...'"
    exit 1
fi

# 1. –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É
if [ ! -d "Crypto-Telegram-Bot" ]; then
    echo "üì• –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
    git clone https://github.com/Nishiyuuu/Crypto-Telegram-Bot.git
else
    echo "üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É..."
    cd Crypto-Telegram-Bot
    git pull origin main
    cd ..
fi

cd Crypto-Telegram-Bot

# 2. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
npm ci --production

# 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É
echo "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
cat > .env << EOF
# Production –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
BOT_TOKEN=$BOT_TOKEN
MONGO_URI=$MONGO_URI
NODE_ENV=production
LOG_LEVEL=info
COINGECKO_API_URL=https://api.coingecko.com/api/v3
NOTIFICATION_INTERVAL=30000
MAX_COINS_FREE=5
MAX_COINS_VIP=20
DEFAULT_THRESHOLD=5.0
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX=100
SESSION_TIMEOUT=3600000
LOG_MAX_SIZE=5242880
LOG_MAX_FILES=5
LOG_DATE_PATTERN=YYYY-MM-DD
ENABLE_VIP_FEATURES=true
ENABLE_PRICE_ALERTS=true
EOF

# 4. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
echo "üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π..."
mkdir -p logs

# 5. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω—å
echo "üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω—å..."
timeout 10 node -e "
const config = require('./src/config/config.js');
console.log('‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞');
" || echo "‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: —Ç–µ—Å—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –Ω–µ –ø—Ä–æ–π—à–æ–≤"

# 6. –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤
echo "üõë –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤..."
pm2 stop crypto-bot 2>/dev/null || true
pm2 delete crypto-bot 2>/dev/null || true

# 7. –ó–∞–ø—É—Å–∫ –∑ PM2
echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ PM2..."
pm2 start ecosystem.config.js --env production

# 8. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è PM2 –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
pm2 save
pm2 startup | tail -1 | bash || true

# 9. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
echo "üìä –°—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫—É:"
sleep 3
pm2 status

echo "üìù –õ–æ–≥–∏ –∑–∞–ø—É—Å–∫—É:"
pm2 logs crypto-bot --lines 10

echo ""
echo "‚úÖ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üîß –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
echo "pm2 status           - —Å—Ç–∞—Ç—É—Å –≤—Å—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤"
echo "pm2 logs crypto-bot  - –ø–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤"
echo "pm2 restart crypto-bot - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
echo "pm2 stop crypto-bot  - –∑—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞"
echo ""
